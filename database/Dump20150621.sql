CREATE DATABASE  IF NOT EXISTS `JOBLINK` /*!40100 DEFAULT CHARACTER SET UTF8 */;
USE `JOBLINK`;
-- MYSQL DUMP 10.13  DISTRIB 5.6.13, FOR WIN32 (X86)
--
-- HOST: 127.0.0.1    DATABASE: JOBLINK
-- ------------------------------------------------------
-- SERVER VERSION	5.6.12-LOG

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES UTF8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- TABLE STRUCTURE FOR TABLE `TB_BALANCE_SHEET`
--
/* 用户余额表 存储用户账户余额信息*/
DROP TABLE IF EXISTS `TB_BALANCE_SHEET`;
/*!40101 SET @SAVED_CS_CLIENT     = @@CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_CLIENT = UTF8 */;
CREATE TABLE `TB_BALANCE_SHEET` (
  `ID` VARCHAR(50) NOT NULL,
  `INCOME_RESOURCE` INT(11) DEFAULT NULL COMMENT '1:面试收入 +\N2:培训收入 +\N3:下载简历 -',
  `REFERENCE_ID` INT(11) DEFAULT NULL COMMENT '根据收入来源来关联不同的其他ID 比如 如果TYPE=1 REFERENCE_ID去取的是INTERVIEW_ID,如果是培训收入则去取TRAINING_ID',
  `CREATE_USERID` VARCHAR(50) NOT NULL COMMENT '创建人ID',
  `CREATE_DATE` DATETIME NOT NULL COMMENT '创建日期时间',
  `LAST_UPDATE_USERID` VARCHAR(50) NOT NULL COMMENT '最后更新人ID',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新日期时间',
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT '用户账户余额表'; 
/*!40101 SET CHARACTER_SET_CLIENT = @SAVED_CS_CLIENT */;


/*Table structure for table 支付表*/
DROP TABLE IF EXISTS TB_PAYMENT;

CREATE TABLE TB_PAYMENT (
  ID VARCHAR(50) NOT NULL,
  PAYMENT_TYPE INT(11) NOT NULL COMMENT '支付类型: 1 面试; 2 培训; 3 下载简历',
  REFERENCE_ID VARCHAR(50) NOT NULL COMMENT '关联ID',
  PAYMENT_CHANNEL ENUM('wechat', 'alipay') NOT NULL COMMENT '支付渠道',
  PAYMENT_AMOUNT DECIMAL(5,2) NOT NULL COMMENT '金额',
  PAYMENT_USERID VARCHAR(50) NOT NULL COMMENT '支付人ID',
  SUBMIT_DATE DATETIME DEFAULT NULL COMMENT '提交订单日期时间',
  PAYMENT_DATE DATETIME DEFAULT NULL COMMENT '支付日期时间',
  STATUS INT(11) DEFAULT 0 COMMENT '状态  0 未支付  1 已支付',
  PRIMARY KEY (ID),
  UNIQUE KEY (PAYMENT_TYPE, REFERENCE_ID)
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='支付表';


--
-- TABLE STRUCTURE FOR TABLE `TB_EMPLOYER`
--

DROP TABLE IF EXISTS `TB_EMPLOYER`;
/*!40101 SET @SAVED_CS_CLIENT     = @@CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_CLIENT = UTF8 */;
CREATE TABLE `TB_EMPLOYER` (
  `ID` VARCHAR(50) NOT NULL,
  `EMPLOYER_NAME` VARCHAR(50) DEFAULT NULL COMMENT '公司或雇主名称',
  `CATEGORY` INT(11) DEFAULT NULL COMMENT '行业类别\N1：金融\N2：互联网\N3：电商\N4：软件服务\N5：产品研发\N20：其他',
  `SCALE` INT(11) DEFAULT NULL COMMENT '规模\N1：10人\N2：50人\N3：100人\N4：500人\N5：1000人\N6：5000人\N7：更多',
  /*`INVESTMENT_STAGE` VARCHAR(50) DEFAULT NULL COMMENT '投资阶段  可以填写描述性信息，比如A轮，或者IPO阶段',*/
  `CITY` VARCHAR(20) DEFAULT NULL COMMENT '所在城市',
  `ADDRESS` VARCHAR(200) DEFAULT NULL COMMENT '公司地址',
  `BUSINESS_FOCUS` TEXT DEFAULT NULL COMMENT '主营业务 比如互联网金融的P2P,小贷，担保等',
  `WELFARE` TEXT DEFAULT NULL COMMENT '公司福利',
  `CREATE_USERID` VARCHAR(50) NOT NULL COMMENT '创建人ID',
  `CREATE_DATE` DATETIME NOT NULL COMMENT '创建日期时间',
  `LAST_UPDATE_USERID` VARCHAR(50) NOT NULL COMMENT '最后更新人ID',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新日期时间',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `EMPLOYER_NAME` (`EMPLOYER_NAME`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='企业雇主或公司表';
/*!40101 SET CHARACTER_SET_CLIENT = @SAVED_CS_CLIENT */;



DROP TABLE IF EXISTS `TB_INTERVIEW`;



DROP TABLE IF EXISTS `TB_USER`;
/*!40101 SET @SAVED_CS_CLIENT     = @@CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_CLIENT = UTF8 */;
CREATE TABLE `TB_USER` (
  `ID` VARCHAR(50) NOT NULL COMMENT '用户ID',
  `USERNAME` VARCHAR(50) NOT NULL COMMENT '用户登录名',
  `PASSWORD` VARCHAR(50) NOT NULL COMMENT '密码',
  `NICKNAME` VARCHAR(50) DEFAULT NULL COMMENT '昵称',
  `ICON_URL` VARCHAR(200) DEFAULT NULL COMMENT '头像图片地址',
  `CITY` VARCHAR(20) DEFAULT NULL COMMENT '常住城市',
  `MOBILE_PHONE` VARCHAR(20) DEFAULT NULL COMMENT '手机号',
  `EMAIL` VARCHAR(50) DEFAULT NULL COMMENT '电子邮箱',
  `POINT` INT(11) NOT NULL DEFAULT '0' COMMENT '积分',
  `BIRTHDAY` DATE DEFAULT NULL COMMENT '出生日期',
  `EDUCATION_LEVEL` INT(11) DEFAULT NULL COMMENT '教育程度  1 大专 2 本科  3 硕士 4 博士',
  `EXPERIENCE_AGE` INT(11) DEFAULT NULL COMMENT '工作年限',
  `STRENGTH_SUMMARY` TEXT DEFAULT NULL COMMENT '能力综述',
  `EMPLOYER_ID` VARCHAR(50) DEFAULT NULL COMMENT '目前雇主',
  `TITLE` VARCHAR(50) DEFAULT NULL COMMENT '目前职务',
  `WORK_DESCRIPTION` VARCHAR(200) DEFAULT NULL COMMENT '目前工作描述',
  `CURRENT_SALARY` VARCHAR(50) DEFAULT NULL COMMENT '目前年薪',
  `EXPECTED_SALARY` VARCHAR(50) DEFAULT NULL COMMENT '期望年薪',
  `VISA` VARCHAR(50) DEFAULT NULL COMMENT '持有签证',
  `VISA_EXPIRED_DATE` DATE DEFAULT NULL COMMENT '签证有效期截止日期',
  `TAG` VARCHAR(200) DEFAULT NULL COMMENT '标签',
  `PROFILE_URL_CN` VARCHAR(200) DEFAULT NULL COMMENT '中文简历存放路径',
  `PROFILE_URL_EN` VARCHAR(200) DEFAULT NULL COMMENT '英文简历存放路径',
  `IF_TOBE_SEARCHED` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否愿意被招聘方找到',
  `CREATE_USERID` VARCHAR(50) NOT NULL COMMENT '创建人ID',
  `CREATE_DATE` DATETIME NOT NULL COMMENT '创建日期时间',
  `LAST_UPDATE_USERID` VARCHAR(50) NOT NULL COMMENT '最后更新人ID',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新日期时间',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `USERNAME` (`USERNAME`),
  UNIQUE KEY `MOBILE_PHONE` (`MOBILE_PHONE`),
  UNIQUE KEY `EMAIL` (`EMAIL`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT='用户基本信息表';
/*!40101 SET CHARACTER_SET_CLIENT = @SAVED_CS_CLIENT */;



DROP TABLE IF EXISTS `TB_POSITION`;

CREATE TABLE `TB_POSITION` (
  `ID` VARCHAR(50) NOT NULL COMMENT '职位ID',
  `EMPLOYER_ID` VARCHAR(50) NOT NULL COMMENT '所属公司ID',
  `TITLE` VARCHAR(100) NOT NULL COMMENT '职位名称',
  `CITY` VARCHAR(20) DEFAULT NULL COMMENT '所在城市',
  `ADDRESS` VARCHAR(200) DEFAULT NULL COMMENT '工作地点',
  /*`LOCATION` VARCHAR(50) NOT NULL COMMENT '工作地点',*/
  `EXPERIENCE_AGE` VARCHAR(50) DEFAULT NULL COMMENT '要求工作年限',
  `JD` TEXT DEFAULT NULL COMMENT '职位描述',
  `REQUIREMENT` TEXT DEFAULT NULL COMMENT '职位需求',
  `SALARY_TYPE` INT(11) DEFAULT NULL COMMENT '工资类型  1 月薪 2 年薪',
  `SALARY_PACKAGE` VARCHAR(50) DEFAULT NULL COMMENT '工资范围(年薪)',
  `TAG` VARCHAR(200) DEFAULT NULL COMMENT '标签',
  `PUBLISH_USERID` VARCHAR(50) NOT NULL COMMENT '发布人ID',
  `IF_INTERVIEW` TINYINT(1) NOT NULL COMMENT '是否提供面试',
  `INTERVIEW_CHARGE` INT(11) DEFAULT NULL COMMENT '面试费用',
  `IF_TRAINING` TINYINT(1) DEFAULT NULL COMMENT '是否提供培训',
  `START_DATE` DATE DEFAULT NULL COMMENT '有效期起始日期',
  `EXPIRED_DATE` DATE NOT NULL COMMENT '有效期截止日期',
  `IF_OPEN` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否开放',
  `IF_VALID` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '是否有效',
  `CREATE_USERID` VARCHAR(50) NOT NULL COMMENT '创建人ID',
  `CREATE_DATE` DATETIME NOT NULL COMMENT '创建日期时间',
  `LAST_UPDATE_USERID` VARCHAR(50) NOT NULL COMMENT '最后更新人ID',
  `LAST_UPDATE_DATE` DATETIME NOT NULL COMMENT '最后更新日期时间',
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT = '职位表';



DROP TABLE IF EXISTS TB_APPLICATION;

CREATE TABLE TB_APPLICATION (
  ID VARCHAR(50) NOT NULL COMMENT '申请ID',
  POSITION_ID VARCHAR(50) NOT NULL COMMENT '职位ID',
  APPLICANT_USERID VARCHAR(50) NOT NULL COMMENT '求职者ID',
  APPLY_DATE DATETIME NOT NULL COMMENT '提交申请日期时间',
  IF_INTERVIEW TINYINT(1) NOT NULL COMMENT '是否面试',
  STATUS INT(11) NOT NULL DEFAULT 0 COMMENT '申请状态 0 已申请, 1 已付款, 2 已面试(面试官评价), 3 已评价(求职者评价), 4 已推荐, 5 已成功(内推入职)',
  TECH_RATE INT(11) DEFAULT NULL COMMENT '核心技术评分',
  FRAMEWORK_RATE INT(11) DEFAULT NULL COMMENT '框架技术评分',
  DATABASE_RATE INT(11) DEFAULT NULL COMMENT '数据库技术评分',
  ENGLISH_RATE INT(11) DEFAULT NULL COMMENT '英语水平评分',
  COMMUNICATION_RATE INT(11) DEFAULT NULL COMMENT '交流能力评分',
  MANAGEMENT_RATE INT(11) DEFAULT NULL COMMENT '管理能力评分',
  INTERVIEWER_COMMENT VARCHAR(1000) DEFAULT NULL COMMENT '面试官反馈',
  INTERVIEWER_COMMENT_DATE DATETIME DEFAULT NULL COMMENT '面试官反馈日期时间',
  APPLICANT_COMMENT VARCHAR(1000) DEFAULT NULL COMMENT '求职者反馈',
  APPLICANT_COMMENT_DATE DATETIME DEFAULT NULL COMMENT '求职者反馈日期时间',
  PRIMARY KEY (ID),
  UNIQUE KEY (POSITION_ID, APPLICANT_USERID)
) ENGINE=INNODB DEFAULT CHARSET=UTF8 COMMENT = '求职申请表';



DROP TABLE IF EXISTS TB_SMS;

CREATE TABLE TB_SMS (
  ID VARCHAR(50) NOT NULL COMMENT 'ID',
  MOBILE_PHONE VARCHAR(20) NOT NULL COMMENT '发送至手机号',
  SMS_TYPE ENUM('verification', 'text') NOT NULL COMMENT '短信类型',
  SMS_CONTENT VARCHAR(140) NOT NULL COMMENT '短信内容',
  SEND_TIME DATETIME NOT NULL COMMENT '发送日期时间',
  STATUS ENUM('not_send', 'sent') NOT NULL COMMENT '发送状态',
  PRIMARY KEY (ID),
  INDEX IDX_SMS_MOBILE(MOBILE_PHONE),
  INDEX IDX_SMS_TYPE(SMS_TYPE),
  INDEX IDX_SMS_STATUS(STATUS)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='短信发送表';



DROP TABLE IF EXISTS TB_SUGGESTION;

CREATE TABLE TB_SUGGESTION (
  ID VARCHAR(50) NOT NULL COMMENT 'ID',
  SUGGESTION_TYPE VARCHAR(20) NOT NULL COMMENT '意见类别',
  SUGGESTION_CONTENT TEXT NOT NULL COMMENT '反馈意见内容',
  USER_IP VARCHAR(20) DEFAULT NULL COMMENT '提交人IP地址',
  USER_CITY VARCHAR(20) DEFAULT NULL COMMENT '提交人所在城市',
  SUBMIT_TIME DATETIME NOT NULL COMMENT '提交日期时间',
  PRIMARY KEY (ID),
  INDEX IDX_SUGGESTION_CITY(USER_CITY)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='反馈意见表';



/*View structure for view V_POSITION_COUNT*/
DROP VIEW IF EXISTS V_POSITION_COUNT;

CREATE VIEW V_POSITION_COUNT AS
SELECT POSITION_ID, COUNT(APPLICANT_USERID) AS APPLICANT_COUNT
FROM TB_APPLICATION
GROUP BY POSITION_ID;



/*View structure for view V_POSITION*/
DROP VIEW IF EXISTS V_POSITION;

CREATE VIEW V_POSITION AS
SELECT TB_POSITION.*,
(CURRENT_DATE <= EXPIRED_DATE) AS IF_EFFECTIVE,
TB_USER.NICKNAME AS PUBLISH_USERNAME,
TB_USER.EMAIL AS PUBLISHER_EMAIL,
TB_EMPLOYER.EMPLOYER_NAME, TB_EMPLOYER.CATEGORY, TB_EMPLOYER.SCALE,
TB_EMPLOYER.BUSINESS_FOCUS, TB_EMPLOYER.WELFARE,
(CASE WHEN V_POSITION_COUNT.APPLICANT_COUNT IS NULL THEN 0
ELSE V_POSITION_COUNT.APPLICANT_COUNT END) AS APPLICANT_COUNT
FROM TB_POSITION
LEFT JOIN TB_USER
ON TB_POSITION.PUBLISH_USERID = TB_USER.ID
LEFT JOIN TB_EMPLOYER
ON TB_POSITION.EMPLOYER_ID = TB_EMPLOYER.ID
LEFT JOIN V_POSITION_COUNT
ON TB_POSITION.ID = V_POSITION_COUNT.POSITION_ID;



/*View structure for view V_APPLICATION*/
DROP VIEW IF EXISTS V_APPLICATION;

CREATE VIEW V_APPLICATION AS
SELECT TB_APPLICATION.*,
TB_USER.NICKNAME AS APPLICANT_USERNAME,
TB_USER.EMAIL AS APPLICANT_EMAIL,
V_POSITION.EMPLOYER_ID, V_POSITION.EMPLOYER_NAME,
V_POSITION.TITLE, V_POSITION.CITY, V_POSITION.ADDRESS,
V_POSITION.EXPERIENCE_AGE, V_POSITION.SALARY_TYPE, V_POSITION.SALARY_PACKAGE,
V_POSITION.PUBLISH_USERID, V_POSITION.PUBLISH_USERNAME, V_POSITION.PUBLISHER_EMAIL,
V_POSITION.EXPIRED_DATE, V_POSITION.IF_EFFECTIVE,
V_POSITION.IF_OPEN, V_POSITION.IF_VALID,
V_POSITION.INTERVIEW_CHARGE, V_POSITION.IF_TRAINING,
V_POSITION.APPLICANT_COUNT
FROM TB_APPLICATION
LEFT JOIN TB_USER
ON TB_APPLICATION.APPLICANT_USERID = TB_USER.ID
LEFT JOIN V_POSITION
ON TB_APPLICATION.POSITION_ID = V_POSITION.ID;



/*View structure for view V_APPLICATION_AVG_RATES -- added on 20150928*/
DROP VIEW IF EXISTS V_APPLICATION_AVG_RATES;

CREATE VIEW V_APPLICATION_AVG_RATES AS
SELECT APPLICANT_USERID, ROUND(AVG(TECH_RATE)) AS AVG_TECH_RATE,
ROUND(AVG(FRAMEWORK_RATE)) AS AVG_FRAMEWORK_RATE,
ROUND(AVG(DATABASE_RATE)) AS AVG_DATABASE_RATE,
ROUND(AVG(ENGLISH_RATE)) AS AVG_ENGLISH_RATE,
ROUND(AVG(COMMUNICATION_RATE))AS AVG_COMMUNICATION_RATE,
ROUND(AVG(MANAGEMENT_RATE)) AS AVG_MANAGEMENT_RATE
FROM TB_APPLICATION GROUP BY APPLICANT_USERID;



/*View structure for view V_USER -- moved to end on 20150928*/
DROP VIEW IF EXISTS V_USER;

CREATE VIEW V_USER AS
SELECT TB_USER.*, TB_EMPLOYER.EMPLOYER_NAME,
(YEAR(CURRENT_DATE) - YEAR(BIRTHDAY)) AS AGE,
AVG_RATES.AVG_TECH_RATE, AVG_RATES.AVG_FRAMEWORK_RATE,
AVG_RATES.AVG_DATABASE_RATE, AVG_RATES.AVG_ENGLISH_RATE,
AVG_RATES.AVG_COMMUNICATION_RATE, AVG_RATES.AVG_MANAGEMENT_RATE
FROM TB_USER
LEFT JOIN TB_EMPLOYER
ON TB_USER.EMPLOYER_ID = TB_EMPLOYER.ID
LEFT JOIN V_APPLICATION_AVG_RATES AS AVG_RATES
ON TB_USER.ID = AVG_RATES.APPLICANT_USERID;


-- DUMP COMPLETED ON 2015-06-21  0:30:40
